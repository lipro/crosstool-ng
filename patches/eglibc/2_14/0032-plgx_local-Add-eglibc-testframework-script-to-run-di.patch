From d9e2cb469a386d8fd9612bfe6b39d6b0cf858615 Mon Sep 17 00:00:00 2001
From: David Holsgrove <david.holsgrove@petalogix.com>
Date: Mon, 21 May 2012 12:40:50 +1000
Subject: [PATCH 32/41] plgx_local: Add eglibc testframework script to run directly on target

instead of over ssh as eglibc make tests attempts to do

Signed-off-by: David Holsgrove <david.holsgrove@petalogix.com>
---
 plgx_local/eglibc.tests  |  117 ++++++++++++++++++++++++++++++++++++++++++++++
 plgx_local/eglibctest.sh |   58 +++++++++++++++++++++++
 2 files changed, 175 insertions(+), 0 deletions(-)
 create mode 100644 plgx_local/eglibc.tests
 create mode 100755 plgx_local/eglibctest.sh

diff --git a/plgx_local/eglibc.tests b/plgx_local/eglibc.tests
new file mode 100644
index 0000000..d6f02d7
--- /dev/null
+++ b/plgx_local/eglibc.tests
@@ -0,0 +1,117 @@
+./posix/runptests
+./posix/globtest
+./posix/test-vfork
+./posix/wordexp-test
+./posix/testfnm
+./posix/runtests
+./csu/test-as-const-tcb-offsets
+./stdio-common/test-fseek
+./stdio-common/test-popen
+./stdio-common/test-fwrite
+./stdio-common/temptest
+./stdio-common/test-vfprintf
+./stdio-common/test_rdwr
+./libio/test-freopen
+./libio/test-fmemopen
+./dlfcn/failtest
+./ctype/test_ctype
+./crypt/md5test
+./crypt/sha512c-test
+./crypt/sha256test
+./crypt/md5c-test
+./crypt/sha512test
+./crypt/sha256c-test
+./timezone/test-tz
+./nss/test-netdb
+./nss/tst-nss-test1
+./wctype/test_wcfuncs
+./wctype/test_wctype
+./catgets/test-gencat
+./argp/argp-test
+./math/test-fenv
+./math/atest-sincos
+./math/test-fpucw
+./math/test-tgmath-int
+./math/test-misc
+./math/test-double
+./math/test-tgmath-ret
+./math/test-tgmath2
+./math/test-ifloat
+./math/test-tgmath
+./math/test-dbl-wrap
+./math/atest-exp
+./math/test-matherr
+./math/test-idouble
+./math/basic-test
+./math/atest-exp2
+./math/test-powl
+./math/test-float
+./wcsmbs/test-wcslen
+./wcsmbs/test-wcscmp
+./wcsmbs/test-wcschr
+./wcsmbs/test-wmemcmp
+./grp/testgrp
+./assert/test-assert-perr
+./assert/test-assert
+./string/test-ffs
+./string/test-memccpy
+./string/test-strspn
+./string/test-strcat
+./string/test-strncpy
+./string/test-mempcpy
+./string/test-strcspn
+./string/test-strchr
+./string/test-strstr
+./string/test-strncasecmp
+./string/test-stpcpy
+./string/test-memchr
+./string/test-memmem
+./string/test-strncmp
+./string/test-stpncpy
+./string/test-strcmp
+./string/test-strpbrk
+./string/test-memset
+./string/test-strrchr
+./string/test-memmove
+./string/test-rawmemchr
+./string/test-memcmp
+./string/noinl-tester
+./string/testcopy
+./string/tester
+./string/inl-tester
+./string/test-strcasecmp
+./string/test-strcasestr
+./string/test-strchrnul
+./string/test-strnlen
+./string/test-memcpy
+./string/test-strncat
+./string/test-strlen
+./time/test_time
+./time/clocktest
+./inet/htontest
+./inet/test_ifindex
+./inet/test-ifaddrs
+./inet/test-inet6_opt
+./stdlib/test-a64l
+./stdlib/test-canon
+./stdlib/test-canon2
+./stdlib/testrand
+./stdlib/testmb2
+./stdlib/testmb
+./stdlib/testsort
+./stdlib/testdiv
+./nptl/test-as-const-unwindbuf
+./nptl/test-as-const-lowlevelbarrier
+./nptl/test-as-const-lowlevelrobustlock
+./nptl/test-as-const-pthread-pi-defines
+./nptl/test-as-const-pthread-errnos
+./nptl/test-as-const-lowlevelrwlock
+./nptl/test-as-const-lowlevelcond
+./nptl/test-as-const-structsem
+./debug/test-stpcpy_chk
+./debug/test-strcpy_chk
+./io/test-stat
+./io/test-utime
+./io/test-stat2
+./io/ftwtest
+./io/test-lfs
diff --git a/plgx_local/eglibctest.sh b/plgx_local/eglibctest.sh
new file mode 100755
index 0000000..359b631
--- /dev/null
+++ b/plgx_local/eglibctest.sh
@@ -0,0 +1,58 @@
+#!/bin/sh
+
+test_list=$1
+timeout=$2
+
+test_dir=$(pwd)
+results_dir=${test_dir}/results
+
+setup()
+{
+	mkdir -p ${results_dir}
+	test_log=${results_dir}/test.$$.log
+	results_log=${results_dir}/test.$$.sum
+
+	if [ -z ${timeout} ];then
+		timeout=15
+	fi
+}
+
+main ()
+{
+	for test in $(cat ${test_list});
+	do
+		timeout -t ${timeout} ${test} >> ${test_log}
+		rc=$?
+		if [ "${rc}" == "0" ];then
+			echo "PASS: ${test}" | tee -a ${results_log}
+		elif [ "${rc}" == "143" ];then
+			echo "TIMEOUT: ${test}" | tee -a ${results_log}
+		else
+			echo "FAIL: ${test}" | tee -a ${results_log}
+		fi
+	done
+
+	total_num=$(cat ${test_list} | wc -l )
+	num_pass=$(grep "PASS" ${results_log} | wc -l )
+	num_fail=$(grep "FAIL" ${results_log} | wc -l )
+	num_timeout=$(grep "TIMEOUT" ${results_log} | wc -l )
+
+	echo "" | tee -a ${results_log}
+	echo "-----------------------------------------------------------------------------" | tee -a ${results_log}
+	echo "" | tee -a ${results_log}
+	echo " PetaLinux EGLIBC Test Run, $(date)" | tee -a ${results_log}
+	echo " target is $(hostname)" | tee -a ${results_log}
+	echo "" | tee -a ${results_log}
+	echo " # of unexpected failures  ${num_fail} " | tee -a ${results_log}
+	echo " # of expected passes      ${num_pass} " | tee -a ${results_log}
+	echo "" | tee -a ${results_log}
+	echo " # total                   ${total_num}" | tee -a ${results_log}
+	echo " # timed out               ${num_timeout} " | tee -a ${results_log}
+	echo "" | tee -a ${results_log}
+	echo "-----------------------------------------------------------------------------" | tee -a ${results_log}
+	echo "" | tee -a ${results_log}
+	exit
+}
+
+setup
+main
-- 
1.7.1

