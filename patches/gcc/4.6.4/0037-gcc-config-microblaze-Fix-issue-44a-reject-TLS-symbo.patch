From 81d0205acd452e9e1ea144c16a5669bff56934d0 Mon Sep 17 00:00:00 2001
From: Gopi <gopi@linux69.(none)>
Date: Tue, 16 Nov 2010 16:17:29 +0530
Subject: [PATCH 37/79] gcc/config/microblaze Fix issue 44a, reject TLS symbols as const operands

---
 gcc/config/microblaze/microblaze.c |   23 +++++++++++++++--------
 1 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/gcc/config/microblaze/microblaze.c b/gcc/config/microblaze/microblaze.c
index 9716b4d..c9cdd32 100755
--- a/gcc/config/microblaze/microblaze.c
+++ b/gcc/config/microblaze/microblaze.c
@@ -451,6 +451,12 @@ microblaze_tls_referenced_p (rtx x)
   return for_each_rtx (&x, microblaze_tls_operand_p_1, NULL);
 }
 
+bool
+microblaze_cannot_force_const_mem (rtx x)
+{
+	return microblaze_tls_referenced_p(x);
+}
+
 /* Return TRUE if X references a SYMBOL_REF.  */
 int
 symbol_mentioned_p (rtx x)
@@ -1427,17 +1433,12 @@ microblaze_address_cost (rtx addr, bool speed ATTRIBUTE_UNUSED)
 
 int legitimate_pic_operand_p (rtx x)
 {
-
-#if 0
-  /* REVISIT: Is this check required ? gcc already knows this is a TLS
-     variable */
-   if (microblaze_tls_referenced_p(x) )
-      return 0;
-#endif
-
   if (flag_pic == 2 && (symbol_mentioned_p(x) || label_mentioned_p(x) ))
     return 0;
 
+  if ( microblaze_tls_referenced_p(x) )
+	return 0;
+
   return 1;
 }
 
@@ -1445,6 +1446,9 @@ int
 legitimate_const_operand_p (rtx x)
 {
 
+  if (microblaze_cannot_force_const_mem(x))
+	return 0;
+
   if (GET_CODE (x) == CONST_DOUBLE)
     {
       if ( microblaze_const_double_ok (x, GET_MODE (x)) ) return 0;
@@ -3501,6 +3505,9 @@ microblaze_adjust_cost (rtx insn ATTRIBUTE_UNUSED, rtx link,
 #undef TARGET_RTX_COSTS
 #define TARGET_RTX_COSTS                microblaze_rtx_costs
 
+#undef TARGET_CANNOT_FORCE_CONST_MEM
+#define TARGET_CANNOT_FORCE_CONST_MEM   microblaze_cannot_force_const_mem
+
 #undef TARGET_ADDRESS_COST
 #define TARGET_ADDRESS_COST             microblaze_address_cost
 
-- 
1.7.1

