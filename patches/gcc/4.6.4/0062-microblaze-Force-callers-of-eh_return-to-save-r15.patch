From 675eac5e56162410a4ca46df208618dc10b3a95b Mon Sep 17 00:00:00 2001
From: Edgar E. Iglesias <edgar.iglesias@gmail.com>
Date: Tue, 19 Jun 2012 12:26:27 +0200
Subject: [PATCH 62/79] microblaze: Force callers of eh_return to save r15

Use this to implement the eh_return pattern.

Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>
---
 gcc/config/microblaze/microblaze-protos.h |    1 +
 gcc/config/microblaze/microblaze.c        |   14 ++++++++++++++
 gcc/config/microblaze/microblaze.h        |    1 -
 gcc/config/microblaze/microblaze.md       |   10 ++++++++++
 4 files changed, 25 insertions(+), 1 deletions(-)

diff --git a/gcc/config/microblaze/microblaze-protos.h b/gcc/config/microblaze/microblaze-protos.h
index d1bd06a..481d2e0 100755
--- a/gcc/config/microblaze/microblaze-protos.h
+++ b/gcc/config/microblaze/microblaze-protos.h
@@ -37,6 +37,7 @@ extern void microblaze_expand_divide (rtx *);
 extern void microblaze_expand_conditional_branch (enum machine_mode, rtx *); 
 extern void microblaze_expand_conditional_branch_sf (rtx *); 
 extern int microblaze_can_use_return_insn (void);
+extern void microblaze_eh_return (rtx op0);
 extern int microblaze_const_double_ok (rtx, enum machine_mode);
 extern bool microblaze_cannot_force_const_mem (rtx);
 extern void print_operand (FILE *, rtx, int);
diff --git a/gcc/config/microblaze/microblaze.c b/gcc/config/microblaze/microblaze.c
index 2207bcc..86de046 100755
--- a/gcc/config/microblaze/microblaze.c
+++ b/gcc/config/microblaze/microblaze.c
@@ -1999,6 +1999,11 @@ microblaze_must_save_register (int regno)
   if (frame_pointer_needed && (regno == HARD_FRAME_POINTER_REGNUM))
     return 1;
 
+  if (crtl->calls_eh_return
+      && regno == MB_ABI_SUB_RETURN_ADDR_REGNUM) {
+    return 1;
+  }
+
   if (!current_function_is_leaf)
     {
       if (regno == MB_ABI_SUB_RETURN_ADDR_REGNUM)
@@ -3309,6 +3314,15 @@ microblaze_return_addr (int count, rtx frame ATTRIBUTE_UNUSED)
 		       GEN_INT (8));
 }
 
+void microblaze_eh_return (rtx op0)
+{
+  rtx off, tmp;
+
+  tmp = force_reg (SImode, op0);
+  off = gen_rtx_PLUS (SImode, tmp, GEN_INT(-8));
+  emit_insn (gen_movsi(gen_rtx_MEM(Pmode, stack_pointer_rtx), off));
+}
+
 /* Put string into .sdata2 if below threashold.  */
 void 
 microblaze_asm_output_ident (FILE *file ATTRIBUTE_UNUSED, const char *string)
diff --git a/gcc/config/microblaze/microblaze.h b/gcc/config/microblaze/microblaze.h
index 3456dc7..50e3cdb 100755
--- a/gcc/config/microblaze/microblaze.h
+++ b/gcc/config/microblaze/microblaze.h
@@ -209,7 +209,6 @@ extern enum pipeline_type microblaze_pipe;
 
 /* Describe how we implement __builtin_eh_return.  */
 #define EH_RETURN_DATA_REGNO(N) (((N) < 2) ? MB_ABI_FIRST_ARG_REGNUM + (N) : INVALID_REGNUM)
-#define EH_RETURN_HANDLER_RTX gen_rtx_REG (Pmode, GP_REG_FIRST + MB_ABI_SUB_RETURN_ADDR_REGNUM)
 
 #define MB_EH_STACKADJ_REGNUM  MB_ABI_INT_RETURN_VAL2_REGNUM
 #define EH_RETURN_STACKADJ_RTX  gen_rtx_REG (Pmode, MB_EH_STACKADJ_REGNUM)
diff --git a/gcc/config/microblaze/microblaze.md b/gcc/config/microblaze/microblaze.md
index 15e9b56..86508cf 100755
--- a/gcc/config/microblaze/microblaze.md
+++ b/gcc/config/microblaze/microblaze.md
@@ -2294,3 +2294,13 @@
   [(set_attr "type"     "arith")
   (set_attr "mode"      "none")
   (set_attr "length"    "4")])
+
+; This is used in compiling the unwind routines.
+(define_expand "eh_return"
+  [(use (match_operand 0 "general_operand" ""))]
+  ""
+  "
+{
+  microblaze_eh_return(operands[0]);
+  DONE;
+}")
-- 
1.7.1

